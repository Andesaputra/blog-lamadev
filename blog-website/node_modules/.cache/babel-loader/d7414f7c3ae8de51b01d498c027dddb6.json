{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ands\\\\Desktop\\\\Programming\\\\React\\\\Blog\\\\blog-website\\\\src\\\\context\\\\Context.jsx\",\n  _s = $RefreshSig$();\n//this context is important so we dont need to use props drilling.\n// we gonna pass this context to the login page, register, etc. as information that there is a profil log in or not\n\nimport { useEffect } from \"react\";\nimport { createContext, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  user: JSON.parse(localStorage.getItem(\"user\") || null),\n  isFetching: false,\n  error: false\n};\nexport const Context = /*#__PURE__*/createContext(INITIAL_STATE);\n_c = Context;\nexport const ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\n\n  // to store login credentials in local storage\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  });\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n_c2 = ContextProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"ContextProvider\");","map":{"version":3,"names":["useEffect","createContext","useReducer","Reducer","INITIAL_STATE","user","JSON","parse","localStorage","getItem","isFetching","error","Context","ContextProvider","children","state","dispatch","setItem","stringify"],"sources":["C:/Users/ands/Desktop/Programming/React/Blog/blog-website/src/context/Context.jsx"],"sourcesContent":["//this context is important so we dont need to use props drilling.\r\n// we gonna pass this context to the login page, register, etc. as information that there is a profil log in or not\r\n\r\nimport { useEffect } from \"react\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport Reducer from \"./Reducer\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: JSON.parse(localStorage.getItem(\"user\") || null),\r\n  isFetching: false,\r\n  error: false,\r\n};\r\n\r\nexport const Context = createContext(INITIAL_STATE);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\r\n\r\n  // to store login credentials in local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\r\n  });\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        user: state.user,\r\n        isFetching: state.isFetching,\r\n        error: state.error,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;EACtDC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,OAAO,gBAAGX,aAAa,CAACG,aAAa,CAAC;AAAC,KAAvCQ,OAAO;AAEpB,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACC,OAAO,EAAEC,aAAa,CAAC;;EAE5D;EACAJ,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACH,KAAK,CAACV,IAAI,CAAC,CAAC;EAC1D,CAAC,CAAC;EAEF,oBACE,QAAC,OAAO,CAAC,QAAQ;IACf,KAAK,EAAE;MACLA,IAAI,EAAEU,KAAK,CAACV,IAAI;MAChBK,UAAU,EAAEK,KAAK,CAACL,UAAU;MAC5BC,KAAK,EAAEI,KAAK,CAACJ,KAAK;MAClBK;IACF,CAAE;IAAA,UAEDF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACQ;AAEvB,CAAC;AAAC,GApBWD,eAAe;AAAA,MAAfA,eAAe;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}